<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-4.0.xsd 
	 http://www.springframework.org/schema/tx 
	 http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!--  -->
	<context:component-scan base-package="com.service" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/shop" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!-- mybatis 持久化实例 准备 所有的 DAO 对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 读取配置文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 查找 DAO 并将其 放入 spring 容器中便于管理 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- spring 事务声明 -->
<!-- 	<bean id="transactionManager" -->
<!-- 		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
<!-- 		<property name="dataSource" ref="dataSource"></property> -->
<!-- 	</bean> -->

	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" /> -->

</beans>